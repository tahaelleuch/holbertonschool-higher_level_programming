Using ``matrix_divided``
------------------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Basic usage:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

None as input:
    >>> matrix_divided(None, 1)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

None as div input:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

int as input:
    >>> matrix_divided(1, 1)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

list ad input:
    >>> matrix_divided([1, 2], 1)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

invalid size:
    >>> matrix_divided([[1, 2], [3, 4, 5]], 1)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

str as dic input:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "test")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

empty matrix:
    >>> matrix_divided([[]], 1)
    [[]]

division by zero
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero
